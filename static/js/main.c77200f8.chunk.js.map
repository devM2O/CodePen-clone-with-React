{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prevOpen","icon","Icons","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA+CeA,EArCA,SAACC,GAAW,IAEvBC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SALsB,EAOAC,oBAAS,GAPT,mBAOjBC,EAPiB,KAOXC,EAPW,KAaxB,OACE,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC9C,yBAAKE,UAAU,gBACZN,EACD,4BAAQO,QAAS,kBAAKF,GAAQ,SAAAG,GAAQ,OAAKA,MAAWF,UAAU,uBAC5D,kBAAC,IAAD,CAAiBG,KAAML,EAAMM,IAAsBA,QAGzD,kBAAC,aAAD,CACIC,eAbR,SAAsBC,EAAQC,EAAMZ,GAClCC,EAASD,IAaHA,MAAOA,EACPK,UAAU,sBACVQ,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMlB,EACNmB,MAAO,WACPC,aAAa,OCfVC,EArBS,SAACC,EAAKC,GAE5B,IAAMC,EAJO,iBAIgBF,EAFgB,EAGnBlB,oBAAS,WACjC,IAAMqB,EAAYC,aAAaC,QAAQH,GACvC,OAAgB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACDA,IAEAA,KAVkC,mBAGtCrB,EAHsC,KAG/B4B,EAH+B,KAkB7C,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU/B,MAChD,CAACsB,EAAatB,IAEV,CAACA,EAAO4B,ICsCFI,MAxDf,WAAgB,IAAD,EACWb,EAAgB,OAAQ,IADnC,mBACNc,EADM,KACAC,EADA,OAESf,EAAgB,MAAO,IAFhC,mBAENgB,EAFM,KAEDC,EAFC,OAGOjB,EAAgB,KAAM,IAH7B,mBAGNkB,EAHM,KAGFC,EAHE,OAIepC,mBAAS,IAJxB,mBAINqC,EAJM,KAIEC,EAJF,KAqBb,OAfAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,wCAOR,KAEH,OAAO,kBAAKM,aAAaF,MACxB,CAACR,EAAME,EAAKE,IAIb,oCACA,yBAAKhC,UAAU,iBACb,kBAAC,EAAD,CACEP,SAAS,MACTC,YAAY,OACZC,MAAOiC,EACPhC,SAAUiC,IAEZ,kBAAC,EAAD,CACEpC,SAAS,MACTC,YAAY,MACZC,MAAOmC,EACPlC,SAAUmC,IAEZ,kBAAC,EAAD,CACEtC,SAAS,aACTC,YAAY,KACZC,MAAOqC,EACPpC,SAAUqC,KAGd,yBAAKjC,UAAU,QACb,4BACEkC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YChDfC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c77200f8.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport {Controlled as ControlledEditor} from 'react-codemirror2'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport * as Icons from \"@fortawesome/free-solid-svg-icons\"\n\nconst Editor = (props) => {\n  const{\n    language,\n    displayName,\n    value,\n    onChange\n  }=props\n  const [open, setOpen] = useState(true)\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button onClick={()=> setOpen(prevOpen => !prevOpen)} className=\"expend-collapse-btn\">\n            <FontAwesomeIcon icon={open? Icons.faCompressAlt : Icons.faExpandAlt}/>\n        </button>\n      </div>\n      <ControlledEditor\n          onBeforeChange={handleChange}\n          value={value}\n          className='code-mirror-wrapper'\n          options={{\n            lineWrapping: true,\n            lint: true,\n            mode: language,\n            theme: 'material',\n            lineNumbers: true\n          }}\n      />\n    </div>\n  )\n}\n\nexport default Editor\n","import {useState, useEffect} from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nconst useLocalStorage = (key, initialValue) => {\n\n  const prefixedKey = PREFIX + key\n  const [value, setValue] = useState(()=>{\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if(jsonValue != null) return JSON.parse(jsonValue)\n\n    if(typeof initialValue === 'function'){\n      return initialValue()\n    }else{\n      return initialValue\n    }\n  })\n\n  useEffect(()=>{\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n\nexport default useLocalStorage\n","import React, {useState, useEffect} from 'react';\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() =>{\n    const timeout = setTimeout(function () {\n      setSrcDoc( `\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n      `)\n    }, 250);\n\n    return ()=> clearTimeout(timeout)\n  }, [html, css, js])\n\n\n  return (\n    <>\n    <div className=\"pane top-pane\">\n      <Editor\n        language='xml'\n        displayName='HTML'\n        value={html}\n        onChange={setHtml}\n      />\n      <Editor\n        language='css'\n        displayName='CSS'\n        value={css}\n        onChange={setCss}\n      />\n      <Editor\n        language='javascript'\n        displayName='JS'\n        value={js}\n        onChange={setJs}\n      />\n    </div>\n    <div className=\"pane\">\n      <iframe\n        srcDoc={srcDoc}\n        title=\"output\"\n        sandbox=\"allow-scripts\"\n        frameBorder=\"0\"\n        width=\"100%\"\n        height=\"100%\" />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}